x = (length(colnames(missing_patterns)) - 1)/2,
y = nrow(missing_patterns) - complete_rows_indices[1] + 1,
label = "Complete Cases",
color = 'darkblue') +
labs(x='Variables',
y='Missing Pattern',
colour='Missing Values',) +
theme(legend.position = "none")
# this prevents package loading message from appearing in the rendered version of your problem set
knitr::opts_chunk$set(warning = FALSE, message = FALSE,
echo = TRUE)
library(tidyverse)
library(patchwork)
library(reshape2)
# Add NAs to mtcars dataset
set.seed(5702)
mycars <- mtcars
mycars[1:25, "gear"] <- NA
mycars[10:20, 3:5] <- NA
for (i in 1:10) mycars[sample(32,1), sample(11,1)] <- NA
missing_patterns <- data.frame(is.na(mycars)) %>%
group_by_all() %>%
count(name = "count", sort = TRUE) %>%
ungroup()
sort_text <- names(sort(colSums(is.na(mycars)), decreasing = TRUE))
mod_data <- missing_patterns %>% subset(select=-count)
id <- which(rowSums(mod_data)==0)
row <- nrow(mod_data)
col <- ncol(mod_data)
mod_data <- mod_data %>%
mutate(ID = rownames(.)) %>%
melt(id.vars=c("ID")) %>%
mutate(missing = ifelse(ID == id,2,ifelse(value == "TRUE", 1, 0)))
main_ <- ggplot(mod_data, aes(x=factor(variable,levels=sort_text),
y=factor(ID,rev(unique(ID))))) +
geom_tile(aes(fill=factor(missing)),color = "white") +
scale_fill_manual(values = alpha(c("grey", "blueviolet","grey"),
c(.4,.4,0.9))) +
geom_text(aes(x=(1+col)/2,y=row-id+1), label = "complete cases") +
xlab('variable') +
ylab('missing pattern') +
guides(fill='none') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
mod_data_two <- ggplot(missing_patterns,
aes(x=factor(rownames(missing_patterns),
rev(rownames(missing_patterns))), y=count)) +
geom_bar(stat='identity',fill=ifelse(rownames(missing_patterns)==id,'cornflowerblue',alpha('cornflowerblue',0.5))) +
xlab('') +
ylab('row count') +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
coord_flip()
df_t <- data.frame(colSums(is.na(mycars)))
colnames(df_t) <- 'count'
mod_data_three <- ggplot(df_t,aes(x=factor(rownames(df_t),
levels=sort_text), y=count)) +
geom_bar(stat='identity',fill=alpha('cornflowerblue',0.5)) +
ggtitle('missing value patterns') +
theme_bw() +
theme(panel.grid.major.x=element_blank()) +
xlab('') +
ylab('num rows missing') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
final_plot <- "
111#
2223
2223
2223
"
mod_data_three+main_+mod_data_two+plot_layout(design=final_plot)
missing_plot <- function(data, percent=FALSE)
{
missing_patterns <- data.frame(is.na(data)) %>%
group_by_all() %>%
count(name = "count", sort = TRUE) %>%
ungroup()
if(percent)
{
missing_patterns <- missing_patterns %>%
mutate(count=count/sum(count)*100)
}
sort_data <- names(sort(colSums(is.na(data)), decreasing = TRUE))
dataNew <- missing_patterns %>%
subset(select=-count)
id <- which(rowSums(dataNew)==0)
row <- nrow(dataNew)
col <- ncol(dataNew)
dataNew <- dataNew %>%
mutate(ID = rownames(.)) %>%
melt(id.vars=c("ID")) %>%
mutate(missing = ifelse(ID == id,2,ifelse(value == "TRUE", 1, 0)))
main_ <- ggplot(dataNew, aes(x=factor(variable,levels=sort_data),
y=factor(ID,rev(unique(ID))))) +
geom_tile(aes(fill=factor(missing)),color = "white") +
scale_fill_manual(values = alpha(c("grey", "blueviolet","grey"), c(.4,.4,0.9))) +
geom_text(aes(x=(1+col)/2,y=row-id+1), label = "complete cases") +
scale_x_discrete(label = function(x) abbreviate(x, minlength =5))+
xlab('variable') +
ylab('missing pattern') +
guides(fill='none') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
col_ <- ggplot(missing_patterns, aes(x=factor(rownames(missing_patterns), rev(rownames(missing_patterns))), y=count)) +
geom_bar(stat='identity', fill=ifelse(rownames(missing_patterns)==id, 'cornflowerblue', alpha('cornflowerblue',0.5))) +
xlab('') +
ylab(ifelse(percent,'%rows','row count')) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
coord_flip()
if(percent)
{
col_<-col_+ylim(0,100)
}
DfThree <- data.frame(colSums(is.na(data)))
colnames(DfThree) <- 'count'
if(percent)
{
DfThree <- DfThree%>%mutate(count=count/nrow(data)*100)
}
row_ <- ggplot(DfThree,aes(x=factor(rownames(DfThree),
levels=sort_data), y=count)) +
geom_bar(stat='identity',fill=alpha('cornflowerblue',0.5)) +
ggtitle('missing value patterns') +
theme_bw() +
theme(panel.grid.major.x=element_blank()) +
scale_x_discrete(label = function(x) abbreviate(x, minlength =5))+
xlab('') +
ylab(ifelse(percent,'%rows missing','num rows missing')) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
if(percent)
{
row_<-row_ + ylim(0,100)
}
layout_ <- "
111#
2223
2223
2223
"
row_+main_+col_+plot_layout(design=layout_)
}
eco <- ggplot2::economics
missing_plot(eco, TRUE)
eco <- ggplot2::economics
missing_plot(eco, FALSE)
data <- Lock5withR::HollywoodMovies2011
missing_plot(data, TRUE)
data <- Lock5withR::HollywoodMovies2011
missing_plot(data, FALSE)
data <- read.csv(file ='athlete_events.csv')
missing_plot(data, TRUE)
missing_plot(data, FALSE)
library(tidyverse)
library(patchwork)
library(reshape2)
missing_plot <- function(data, percent=FALSE)
{
missing_patterns <- data.frame(is.na(data)) %>%
group_by_all() %>%
count(name = "count", sort = TRUE) %>%
ungroup()
if(percent)
{
missing_patterns <- missing_patterns %>%
mutate(count=count/sum(count)*100)
}
sort_data <- names(sort(colSums(is.na(data)), decreasing = TRUE))
dataNew <- missing_patterns %>%
subset(select=-count)
id <- which(rowSums(dataNew)==0)
row <- nrow(dataNew)
col <- ncol(dataNew)
dataNew <- dataNew %>%
mutate(ID = rownames(.)) %>%
melt(id.vars=c("ID")) %>%
mutate(missing = ifelse(ID == id,2,ifelse(value == "TRUE", 1, 0)))
main_ <- ggplot(dataNew, aes(x=factor(variable,levels=sort_data),
y=factor(ID,rev(unique(ID))))) +
geom_tile(aes(fill=factor(missing)),color = "white") +
scale_fill_manual(values = alpha(c("grey", "blueviolet","grey"), c(.4,.4,0.9))) +
geom_text(aes(x=(1+col)/2,y=row-id+1), label = "complete cases") +
scale_x_discrete(label = function(x) abbreviate(x, minlength =5))+
xlab('variable') +
ylab('missing pattern') +
guides(fill='none') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
col_ <- ggplot(missing_patterns, aes(x=factor(rownames(missing_patterns), rev(rownames(missing_patterns))), y=count)) +
geom_bar(stat='identity', fill=ifelse(rownames(missing_patterns)==id, 'cornflowerblue', alpha('cornflowerblue',0.5))) +
xlab('') +
ylab(ifelse(percent,'%rows','row count')) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
coord_flip()
if(percent)
{
col_<-col_+ylim(0,100)
}
DfThree <- data.frame(colSums(is.na(data)))
colnames(DfThree) <- 'count'
if(percent)
{
DfThree <- DfThree%>%mutate(count=count/nrow(data)*100)
}
row_ <- ggplot(DfThree,aes(x=factor(rownames(DfThree),
levels=sort_data), y=count)) +
geom_bar(stat='identity',fill=alpha('cornflowerblue',0.5)) +
ggtitle('missing value patterns') +
theme_bw() +
theme(panel.grid.major.x=element_blank()) +
scale_x_discrete(label = function(x) abbreviate(x, minlength =5))+
xlab('') +
ylab(ifelse(percent,'%rows missing','num rows missing')) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
if(percent)
{
row_<-row_ + ylim(0,100)
}
layout_ <- "
111#
2223
2223
2223
"
row_+main_+col_+plot_layout(design=layout_)
}
data <- read.csv(file ='./athlete_events.csv')
missing_plot(data, TRUE)
missing_plot(data, FALSE)
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
opts_chunk$set(warning=FALSE, message=FALSE)
counts <- df %>% group_by(Year, Season) %>% summarize(Athletes = length(unique(identity)),)
p1 <- ggplot(counts, aes(x=Year, y=Athletes, group=Season, color=Season)) +
geom_point(size=1.5) +
geom_line() +
scale_color_manual(values=c("red","blue")) +
xlab("Years") +
ylab("Number of Olympians")+
ggtitle("Number of Olympians in Summer and Winter Olympics from 1896 to 2016")+
annotate("text", x=c(1900, 1932,1956,1976,1980, 1992, 2016), y=c(-100, 1400,2750,7400,4700,800, 10000),
label=c("Athens 1896", "L.A. 1932","Melbourne 1956","Montreal 1976","Moscow 1980","Change in Winter Olympics in 1992", "Rio 2016"), size=3) +
annotate("text",x=c(1916,1942),y=c(6500,6500), label=c("World War I","World War II"), size=4) +
geom_segment(mapping=aes(x=1914,y=6000,xend=1918,yend=6000),color="darkred", size=2) +
geom_segment(mapping=aes(x=1939,y=6000,xend=1945,yend=6000),color="darkred", size=2)
ggplotly(p1, tooltip = c("Year", "Athletes"))
men_age <- filter(df, Sex == "M")
women_age <- filter(df, Sex == "F")
ggplot(men_age, aes(y = Age, x = as.factor(Year))) +
geom_boxplot() +
labs(title = "Distribution of Male participants from 1896 to 2016",
x = "Year",
y = "Age")
ggplot(women_age, aes(y = Age, x = as.factor(Year))) +
geom_boxplot() +
labs(title = "Distribution of Female participants from 1896 to 2016",
x = "Year",
y = "Age")
men_age <- filter(df, Sex == "M")
women_age <- filter(df, Sex == "F")
ggplot(men_age, aes(y = Age, x = as.factor(Year))) +
geom_boxplot() +
labs(title = "Distribution of Male participants from 1896 to 2016",
x = "Year",
y = "Age")
ggplot(women_age, aes(y = Age, x = as.factor(Year))) +
geom_boxplot() +
labs(title = "Distribution of Female participants from 1896 to 2016",
x = "Year",
y = "Age")
htmltools::includeHTML("d3/shapes.html")
htmltools::includeHTML("d3/shapes.html")
htmltools::includeHTML("d3/shapes_new.html")
htmltools::includeHTML("d3/shapes_new.html")
htmltools::includeHTML("d3/shapes_new.html")
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
library(ggplot2)
library(reshape2)
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
df2 = read.csv('./athlete_events.csv')
opts_chunk$set(warning=FALSE, message=FALSE)
# changing the year to match the summer games after 1992
old_year <- c(1994,1998,2002,2006,2010,2014)
new_year <- c(1996,2000,2004,2008,2012,2016)
for (i in 1:length(old_year)){
df2$Year <- gsub(old_year[i], new_year[i], df$Year)
}
df2$Year = as.integer(df2$Year)
df_gender = df2 %>% group_by(Year, Sex) %>%
summarise(Athletes = length(unique(identity)))
df_gender$Year = as.integer(df_gender$Year)
ggplot(data=df_gender, aes(x=Year, y=Athletes, group=Sex)) +
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex))
# changing the year to match the summer games after 1992
old_year <- c(1994,1998,2002,2006,2010,2014)
new_year <- c(1996,2000,2004,2008,2012,2016)
for (i in 1:length(old_year)){
df2$Year <- gsub(old_year[i], new_year[i], df$Year)
}
df2$Year = as.integer(df2$Year)
df_gender = df2 %>% group_by(Year, Sex) %>%
summarise(Athletes = length(unique(identity)))
df_gender$Year = as.integer(df_gender$Year)
ggplot(data=df_gender, aes(x=Year, y=Athletes, group=Sex)) +
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex))
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
library(ggplot2)
library(reshape2)
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
df2 = read.csv('./athlete_events.csv')
opts_chunk$set(warning=FALSE, message=FALSE)
# Exclude art competitions from data (I won't use them again in the kernel)
data <- df %>% filter(Sport != "Art Competitions")
# Recode year of Winter Games after 1992 to match the next Summer Games
# Thus, "Year" now applies to the Olympiad in which each Olympics occurred
original <- c(1994,1998,2002,2006,2010,2014)
new <- c(1996,2000,2004,2008,2012,2016)
for (i in 1:length(original)) {
data$Year <- gsub(original[i], new[i], data$Year)
}
data$Year <- as.integer(data$Year)
# Table counting number of athletes by Year and Sex
counts_sex <- data %>% group_by(Year, Sex) %>%
summarize(Athletes = length(unique(identity)))
counts_sex$Year <- as.integer(counts_sex$Year)
# Plot number of male/female athletes vs time
p2 <- ggplot(counts_sex, aes(x=Year, y=Athletes, group=Sex, color=Sex)) +
geom_point(size=2) +
geom_line()  +
labs(title = "Number of male and female Olympians over time") +
theme(plot.title = element_text(hjust = 0.5))
ggplotly(p2, tooltip = c("Year", "Athletes"))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
library(ggplot2)
library(reshape2)
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
df2 = read.csv('./athlete_events.csv')
opts_chunk$set(warning=FALSE, message=FALSE)
#changing the year to match the summer games after 1992
old_year <- c(1994,1998,2002,2006,2010,2014)
new_year <- c(1996,2000,2004,2008,2012,2016)
for (i in 1:length(old_year)){
df2$Year <- gsub(old_year[i], new_year[i], df$Year)
}
df2$Year = as.integer(df2$Year)
df_gender = df2 %>% group_by(Year, Sex) %>%
summarise(Athletes = length(unique(identity)))
df_gender$Year = as.integer(df_gender$Year)
p2 <- ggplot(data=df_gender, aes(x=Year, y=Athletes, group=Sex)) +
geom_line(aes(color=Sex)) +
geom_point(aes(color=Sex))
ggplotly(p2)
library("plotly")
library("tidyverse")
library("data.table")
library("knitr")
library("grid")
library("gridExtra")
library("dplyr")
library('ggrepel')
df <- read_csv("athlete_events.csv",
col_types = cols(
identity = col_character(),
Name = col_character(),
Sex = col_factor(levels = c("M","F")),
Age =  col_integer(),
Height = col_double(),
Weight = col_double(),
Team = col_character(),
NOC = col_character(),
Games = col_character(),
Year = col_integer(),
Season = col_factor(levels = c("Summer","Winter")),
City = col_character(),
Sport = col_character(),
Event = col_character(),
Medal = col_factor(levels = c("Gold","Silver","Bronze"))
)
)
